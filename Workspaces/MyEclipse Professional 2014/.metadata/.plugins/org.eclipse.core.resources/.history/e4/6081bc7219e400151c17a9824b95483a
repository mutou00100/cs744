<%@ include file="realhead.jsp"%>
<div class="span10" id="datacontent">
					
					<table class="table">
						<thead>
							<tr>
								<th colspan="5">Send Message</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>sender：</td>
								<td class="input"><input name="ori" id= "ori" class="input-small"
									size="10" type="text" value=""></input></td>
								<td>receiver：</td>
								<td class="input"><input class="input-small" id= "dest" name="dest"
									size="10" type="text" value=""></input></td>
								<td>message：</td>
								<td class="input"><input class="input-small" id= "message" name="message"
									size="10" type="text" value=""></input></td>
								<td>
									<button class="btn btn-primary" type="submit"
									 onclick = "sendMessage()">Send</button>
								</td>
							</tr>
						</tbody>
					</table>
<script type="text/javascript">
	var inactivelist = [3];
   	var nodes, edges, network;
   	nodes = new vis.DataSet();
		edges = new vis.DataSet();
    var DIR = 'img/';
	var EDGE_LENGTH_MAIN = 500;
	var EDGE_LENGTH_SUB = 100;
  	var pre = ori;	
	function createXMLHttp(){
			if(window.XMLHttpRequest){
				xmlHttp = new XMLHttpRequest() ;
			} else {
				xmlHttp = new ActiveXObject("Microsoft.XMLHTTP") ;
			}
		}
	function sendMessage(){
			dest = document.getElementById('dest').value;
			ori = document.getElementById('ori').value;
			message = document.getElementById('message').value;
			createXMLHttp() ;
			xmlHttp.open("POST","sendMessage?ori="+ori+ "&&dest=" +dest +"&&message=" + message) ;
			xmlHttp.onreadystatechange = sendMessageCallback ;
			xmlHttp.send() ;
	}
  	function sendMessageCallback(){
  		if(xmlHttp.readyState == 4){
				if(xmlHttp.status == 200){
					var txt1 = xmlHttp.responseText ;
					if (txt1 == "false") {
						alert("This message failed to be sent");
					} else {
					var txt2 = txt1.substring(1,txt1.length-1);
					var txt3 = txt2.split(",")
					txt=[];
					for(var j=0;j<txt3.length;j++){
						txt.push(parseInt(txt3[j]));
					}
						add(txt);
					}					
				}
			}
  	}
  	function add(txt)
  					{
  					console.log(txt);
  					var count = 0;
					for (var i = 0; i < txt.length; i++) {
						get(i,count,txt);
						get2(i,count+1,txt);
						count++;}	
  	}
  	function get(i,count,txt) {
								setTimeout(function() {
								if (inactivelist.indexOf(txt[i])<0){
								nodes.update({id: txt[i],color: {border: 'green'}});
								pre = txt[i];	
								}
								else {
									sendMessage(pre,dest,message);
								}
								},1000*count);
  	}
  	function get2(i,count,txt) {
  		setTimeout(function() {
  							if (inactivelist.indexOf(txt[i])<0){
							nodes.update({id: txt[i],color: {border: '#6AAFFF'}});}
							}
							,1000*(count));
  	}
	</script>
