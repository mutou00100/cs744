<%@ include file="head_without_jsp.jsp"%>
<%String error = "";
	NodeDao nd = new NodeDao();
	ArrayList<Integer> res = nd.getAllC();
	List<Node> allnodes = nd.getAllNodes();
	List<Edge> edge = nd.getCEdges();
	List<Edge> edgeCC = nd.getEdgesForC();
	List<Edge> edgeNN = nd.getEdgesForN();
	List<Edge> edgeCN = nd.getCEdges();
	edge.addAll(nd.getNEdges());
	List<Integer> allPatterns = nd.getAllC();
	ArrayList<Integer> pathNode = new ArrayList<Integer>();
	if (request.getAttribute("pathNode") != null) {
		pathNode = (ArrayList<Integer>)request.getAttribute("pathNode");
	}
	HashSet<Edge> hs = new HashSet<Edge>();
	HashSet<Edge> hs1 = new HashSet<Edge>();
	if (edgeCC.size() != 0){
		hs1 = new HashSet<Edge>(edgeCC);
	}
	%>
	<% 
if (request.getAttribute("error") == null) {
	} else {
			 error = (String) request.getAttribute("error");
				%>
   <script>
    alert("<%=error%>");</script>
   <% }
%>

<script>
	function createXMLHttp(){
			if(window.XMLHttpRequest){
				xmlHttp = new XMLHttpRequest() ;
			} else {
				xmlHttp = new ActiveXObject("Microsoft.XMLHTTP") ;
			}
		}
	function sendMessage(){
			dest = document.getElementById('dest').value;
			ori = document.getElementById('ori').value;
			message = document.getElementById('message').value;
			createXMLHttp() ;
			xmlHttp.open("POST","sendMessage?ori="+ori+ "&&dest=" +dest +"&&message=" + message) ;
			xmlHttp.onreadystatechange = sendMessageCallback ;
			xmlHttp.send() ;
	}
  	function sendMessageCallback(){
  		if(xmlHttp.readyState == 4){
				if(xmlHttp.status == 200){
					var txt1 = xmlHttp.responseText ;
					if (txt1 == "false") {
						alert("This message failed to be sent");
					} else {
					var txt2 = txt1.substring(1,txt1.length-1);
					var txt3 = txt2.split(",");
					txt=[];
					for(var j=0;j<txt3.length;j++){
						txt.push(parseInt(txt3[j]));
					}
						add(txt);
					}					
				}
			}
  	}
  	function add(txt)
  					{
  					console.log(txt);
  					var count = 0;
					for (var i = 0; i < txt.length; i++) {
						get(i,count,txt);
						get2(i,count+1,txt);
						count++;}	
  	}
  	function get(i,count,txt) {
								setTimeout(function() {
								if (inactivelist.indexOf(txt[i])<0){
								nodes.update({id: txt[i],color: {border: 'green'}});
								pre = txt[i];	
								}
								else {
									sendMessage(pre,dest,message);
								}
								},1000*count);
  	}
  	function get2(i,count,txt) {
  		setTimeout(function() {
  							if (inactivelist.indexOf(txt[i])<0){
							nodes.update({id: txt[i],color: {border: '#6AAFFF'}});}
							}
							,1000*(count));
  	}
</script>
